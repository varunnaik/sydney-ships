{"version":3,"sources":["fileparser.js","constants.js","utils.js","CaptureItem/CaptureItem.js","CaptureItem/index.js","CaptureRow/CaptureRow.js","CaptureRow/index.js","CaptureContainer/CaptureContainer.js","CaptureContainer/index.js","CaptureViewer/CaptureViewer.js","CaptureViewer/index.js","AboutDialog/AboutDialog.js","AboutDialog/index.js","Header/Header.js","Header/index.js","App.js","serviceWorker.js","index.js"],"names":["getMMSIFromCaptureId","captureId","substring","getTimestampFromCaptureId","getCapturesByDate","captures","reduce","capturesByDay","capture","mmsi","timestamp","captureDate","moment","unix","byDay","tz","format","dateLabel","time","getCapturesByShipAndDate","filteredCaptures","filter","c","startsWith","BASE_MEDIA_PATH","MANIFEST_FILE","getLocationHash","prefix","re","RegExp","match","window","location","hash","pop","setLocationHash","value","currentValue","length","replace","clearHash","CaptureItemContainer","styled","div","CaptureItemTitle","CaptureDateTime","CaptureTime","CaptureDate","CaptureItemPoster","LazyLoadImage","PlayIcon","CaptureItem","memo","item","shipInfo","scrollPosition","description","name","imgRef","createRef","onClick","ref","effect","src","placeholderSrc","primaryColor","split","getShortDescription","oldProps","newProps","CaptureRowContainer","CaptureRowTitle","h6","TitleBox","CaptureRow","title","items","scrollIntoViewRef","map","key","CaptureContainerContainer","sanitizeScrollToDay","allDays","day","indexOf","stringSimilarity","findBestMatch","bestMatchIndex","CaptureContainer","trackWindowScroll","rows","Object","keys","sort","reverse","useState","scrollToDay","setScrollToDay","displayedPageIndex","setDisplayedPageIndex","useEffect","currentDay","useRef","useLayoutEffect","current","scrollPos","offsetTop","setTimeout","scrollTo","scrollToDayCallback","currentScrollToDay","infiniteScrollLoader","e","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","slice","undefined","CloseButton","CaptureLabelContainer","CaptureHeader","h4","Details","DetailsSpan","span","ModalBody","CopyrightText","showHideViewer","setCaptureDetails","getCaptureFromHash","timeLabel","getCaptureDetails","CaptureViewer","captureDetails","callback","ModalTransition","width","onClose","components","Body","React","forwardRef","props","children","controls","type","size","Button","AboutDialog","href","HeaderContainer","Heading","h1","DatePickerButtonBox","DatePickerControl","DatePickerPrompt","ShipSelect","Select","AboutButton","Header","dates","highlights","onShipSelect","currentDate","Date","selectedDate","setSelectedDate","selectValue","setSelectValue","selectEntries","setSelectEntries","aboutDialogVisible","setAboutDialogVisible","entries","label","toLowerCase","entry","a","b","splice","currentFilterCode","find","includeDates","d","customInput","iconAfter","onChange","date","dateObj","toDate","selected","className","classNamePrefix","placeholder","options","selectedItem","AppContainer","section","Loader","App","captureRows","setCaptureRows","info","shipData","setShipData","useCallback","async","fetch","then","response","json","data","fetchCaptures","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51c7b5f2.chunk.js","sourcesContent":["import moment from 'moment';\nimport 'moment-timezone';\n\nconst getMMSIFromCaptureId = captureId => captureId.substring(0, 9);\nconst getTimestampFromCaptureId = captureId => captureId.substring(9);\nexport const getCapturesByDate = ({ captures }) => {\n  const capturesByDate = captures.reduce((capturesByDay, capture) => {\n    const mmsi = getMMSIFromCaptureId(capture);\n    const timestamp = getTimestampFromCaptureId(capture);\n    const captureDate = moment.unix(timestamp);\n    const byDay = captureDate.tz('Australia/Sydney').format('YYYY-MM-DD');\n    const dateLabel = captureDate.tz('Australia/Sydney').format('ll');\n    const time = captureDate.tz('Australia/Sydney').format('hh:mm:ss a');\n    return {\n      ...capturesByDay,\n      [byDay]: [\n        ...(capturesByDay[byDay] || []),\n        {\n          dateLabel,\n          time,\n          mmsi,\n          capture,\n          captureDate,\n        },\n      ],\n    };\n  }, {});\n\n  return capturesByDate;\n};\n\nexport const getCaptureDetails = (capture, shipInfo) => {\n  const mmsi = getMMSIFromCaptureId(capture);\n  const timestamp = getTimestampFromCaptureId(capture);\n\n  return {\n    capture,\n    mmsi,\n    timeLabel: moment\n      .unix(timestamp)\n      .tz('Australia/Sydney')\n      .format('LLLL z'),\n    ...shipInfo[mmsi],\n  };\n};\n\nexport const getCapturesByShipAndDate = (mmsi, captures) => {\n  const filteredCaptures = captures.filter(c => c.startsWith(mmsi));\n  return getCapturesByDate({ captures: filteredCaptures });\n};\n","export const BASE_MEDIA_PATH = 'https://s3-ap-southeast-2.amazonaws.com/shippix/';\nexport const MANIFEST_FILE = 'captures.json';\nexport const THUMBNAILS_PATH = 'thumb/';\nexport const VIDEOS_PATH = 'video/';\nexport const PLACEHOLDER_THUMBNAIL = 'placeholder.jpg';\nexport const HEADER_HEIGHT = 43;\nexport const PAGE_SIZE = 8;\n","export const getLocationHash = prefix => {\n  const re = new RegExp(`${prefix}=([^&]*)`);\n  const match = window.location.hash.match(re);\n  return match && match.pop();\n};\nexport const setLocationHash = (prefix, value) => {\n  let hash = window.location.hash;\n  const re = new RegExp(`${prefix}=([^&]*)`);\n  const currentValue = window.location.hash.match(re);\n\n  if (currentValue && currentValue.length > 1) {\n    window.location.hash = hash.replace(currentValue.pop(), value);\n  } else {\n    window.location.hash = window.location.hash + `&${prefix}=${value}`;\n  }\n};\n\nexport const clearHash = (prefix = null) => {\n  if (prefix) {\n    const re = new RegExp(`[&]*${prefix}=[^&]*`);\n    return (window.location.hash = window.location.hash.replace(re, ''));\n  }\n  window.location.hash = '';\n};\n","import React, { memo, createRef } from 'react';\nimport styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport VidPlayIcon from '@atlaskit/icon/glyph/vid-play';\nimport { BASE_MEDIA_PATH, THUMBNAILS_PATH, PLACEHOLDER_THUMBNAIL } from '../constants';\nimport { setLocationHash } from '../utils';\n\nconst CaptureItemContainer = styled.div`\n  margin-right: 1px;\n  margin-bottom: 1px;\n  border: 1px solid #eee;\n  display: flex;\n  flex-direction: column;\n  min-height: 266px;\n  background: white;\n  width: 400px;\n  position: relative;\n\n  :hover {\n    background: rgba(187, 239, 253, 0.3);\n    border-color: #888;\n    cursor: pointer;\n    * > div {\n      color: black;\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n    margin-bottom: 6px;\n    margin-right: 0;\n    min-height: 220px;\n    border-right: 0;\n    border-left: 0;\n  }\n\n  // Fix for react-lazy-image-load component\n  .lazy-load-image-background {\n    flex-grow: 1 !important;\n  }\n`;\n\nconst CaptureItemTitle = styled.div`\n  display: border-box;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  padding-left: 8px;\n  @media screen and (max-width: 600px) {\n  }\n`;\n\nconst CaptureDateTime = styled.div`\n  display: border-box;\n  padding-left: 8px;\n  color: #666;\n`;\n\nconst CaptureTime = styled.div`\n  display: inline-block;\n`;\n\nconst CaptureDate = styled.div`\n  display: none;\n  @media screen and (max-width: 600px) {\n    display: inline;\n  }\n`;\n\nconst CaptureItemPoster = styled(LazyLoadImage)`\n  border: 0;\n  width: 400px;\n  height: 100%;\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n    min-height: 100%;\n  }\n`;\n\nconst PlayIcon = styled.div`\n  position: absolute !important;\n  bottom: 25px;\n  left: 4px;\n`;\n\nconst arePropsEqual = (oldProps, newProps) => {\n  return (\n    oldProps.shipInfo.name === newProps.shipInfo.name &&\n    oldProps.item.capture === newProps.item.capture\n  );\n};\n\nconst getShortDescription = description => {\n  if (description === 'Not available (default)') {\n    return 'Not Available';\n  }\n  return description.split(' ')[0].replace(/,$/, '');\n};\n\nexport const CaptureItem = memo(({ item, shipInfo, scrollPosition }) => {\n  const { description, name } = shipInfo;\n  const imgRef = createRef();\n\n  return (\n    <CaptureItemContainer onClick={() => setLocationHash('capture', item.capture)}>\n      <CaptureDateTime>\n        <CaptureDate>{item.dateLabel}&nbsp;</CaptureDate>\n        <CaptureTime>{item.time}</CaptureTime>\n      </CaptureDateTime>\n      <CaptureItemPoster\n        ref={imgRef}\n        effect={'blur'}\n        scrollPosition={scrollPosition}\n        src={`${BASE_MEDIA_PATH}${THUMBNAILS_PATH}${item.capture}.jpg`}\n        placeholderSrc={`${BASE_MEDIA_PATH}${THUMBNAILS_PATH}${PLACEHOLDER_THUMBNAIL}`}\n      ></CaptureItemPoster>\n      <PlayIcon>\n        <VidPlayIcon primaryColor={'white'}></VidPlayIcon>\n      </PlayIcon>\n      <CaptureItemTitle>\n        {name} ({getShortDescription(description)})\n      </CaptureItemTitle>\n    </CaptureItemContainer>\n  );\n}, arePropsEqual);\n","import { CaptureItem } from './CaptureItem';\nexport default CaptureItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport CaptureItem from '../CaptureItem';\n\nconst CaptureRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 1px;\n  @media screen and (max-width: 600px) {\n    flex-direction: column-reverse;\n  }\n`;\n\nconst CaptureRowTitle = styled.h6`\n  font-weight: bold;\n  max-width: 1.2em;\n  font-size: 13px;\n  text-align: center;\n  box-sizing: border-box;\n  background: #dd8888;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0;\n\n  @media screen and (max-width: 600px) {\n    max-width: 100%;\n    border-right: 0;\n    background: #deebff;\n    order: 1; /* Move title to top instead of bottom */\n  }\n`;\n\nconst TitleBox = styled.div`\n  transform: rotate(270deg);\n  width: 200px;\n  line-height: 1em;\n  @media screen and (max-width: 600px) {\n    transform: rotate(0deg);\n    width: auto;\n    line-height: auto;\n    margin-top: 1px;\n  }\n`;\n\nexport const CaptureRow = ({ title, items, shipInfo, scrollIntoViewRef, scrollPosition }) => {\n  return (\n    <CaptureRowContainer ref={scrollIntoViewRef}>\n      <CaptureRowTitle>\n        <TitleBox>{title}</TitleBox>\n      </CaptureRowTitle>\n      {items.map(item => (\n        <CaptureItem\n          item={item}\n          shipInfo={shipInfo[item.mmsi]}\n          key={item.capture}\n          scrollPosition={scrollPosition}\n        />\n      ))}\n    </CaptureRowContainer>\n  );\n};\n","import { CaptureRow } from './CaptureRow';\nexport default CaptureRow;\n","import React, { useLayoutEffect, useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport stringSimilarity from 'string-similarity';\nimport { trackWindowScroll } from 'react-lazy-load-image-component';\nimport CaptureRow from '../CaptureRow';\nimport { getLocationHash } from '../utils';\n\nimport { HEADER_HEIGHT, PAGE_SIZE } from '../constants';\n\nconst SCROLL_LOAD_THRESHOLD = 400;\n\nconst CaptureContainerContainer = styled.div`\n  box-sizing: border-box;\n  padding-top: ${HEADER_HEIGHT}px;\n  background: white;\n  @media screen and (max-width: 600px) {\n    overflow-x: hidden;\n  }\n`;\n\nconst sanitizeScrollToDay = allDays => {\n  // Always returns a date in the list of allDays, even if the day entered in the URL is not present in that list\n\n  const day = getLocationHash('day');\n\n  if (!day) return null;\n\n  // Find closest day and return it\n  if (!allDays.length || allDays.indexOf(day) > -1) {\n    return day;\n  }\n\n  // As we store ISO dates a string compare works fine\n  const bestMatch = stringSimilarity.findBestMatch(day, allDays);\n  return allDays[bestMatch.bestMatchIndex];\n};\n\nexport const CaptureContainer = trackWindowScroll(({ rows, shipInfo, scrollPosition }) => {\n  const allDays = Object.keys(rows)\n    .sort()\n    .reverse();\n  const [scrollToDay, setScrollToDay] = useState(sanitizeScrollToDay(allDays));\n  const [displayedPageIndex, setDisplayedPageIndex] = useState(PAGE_SIZE);\n\n  useEffect(() => {\n    const allDays = Object.keys(rows)\n      .sort()\n      .reverse();\n    const scrollToDay = sanitizeScrollToDay(allDays);\n    if (scrollToDay) {\n      setDisplayedPageIndex(allDays.indexOf(scrollToDay) + PAGE_SIZE);\n      setScrollToDay(scrollToDay);\n    } else {\n      setDisplayedPageIndex(PAGE_SIZE);\n    }\n  }, [rows, setDisplayedPageIndex]);\n\n  const currentDay = useRef(null);\n  useLayoutEffect(() => {\n    // Logic to scroll to the given day in URL\n    if (scrollToDay && currentDay.current) {\n      const scrollPos = currentDay.current.offsetTop - HEADER_HEIGHT;\n      setTimeout(() => {\n        window.scrollTo(0, scrollPos);\n        setScrollToDay(null); // Reset so subsequent infinite scroll rerenders do not jump us back to this position\n      }, 10); // Ugly but needed to give page a chance to finish laying itself out\n    } else if (scrollToDay === 0) {\n      window.scrollTo(0, 0);\n    }\n\n    const scrollToDayCallback = () => {\n      const currentScrollToDay = sanitizeScrollToDay(allDays);\n      if (currentScrollToDay !== scrollToDay) {\n        setDisplayedPageIndex(allDays.indexOf(currentScrollToDay) + PAGE_SIZE);\n        setScrollToDay(currentScrollToDay);\n      }\n    };\n\n    const infiniteScrollLoader = e => {\n      if (\n        window.innerHeight + document.documentElement.scrollTop + SCROLL_LOAD_THRESHOLD >=\n        document.documentElement.offsetHeight\n      ) {\n        setDisplayedPageIndex(\n          displayedPageIndex + PAGE_SIZE > allDays.length\n            ? allDays.length\n            : displayedPageIndex + PAGE_SIZE\n        );\n      }\n    };\n\n    // If user types in new day scroll to it immediately\n    window.addEventListener('hashchange', scrollToDayCallback);\n\n    // Implement infinite scroll\n    window.addEventListener('scroll', infiniteScrollLoader);\n\n    return () => {\n      window.removeEventListener('hashchange', scrollToDayCallback);\n      window.removeEventListener('scroll', infiniteScrollLoader);\n    };\n  });\n\n  return (\n    <CaptureContainerContainer>\n      {allDays.slice(0, displayedPageIndex).map(day => (\n        <CaptureRow\n          scrollIntoViewRef={scrollToDay === day ? currentDay : undefined}\n          title={day}\n          scrollPosition={scrollPosition}\n          items={rows[day]}\n          shipInfo={shipInfo}\n          key={`capture-row-${day}`}\n        />\n      ))}\n    </CaptureContainerContainer>\n  );\n});\n","import { CaptureContainer } from './CaptureContainer';\nexport default CaptureContainer;\n","import React, { useState, useLayoutEffect } from 'react';\nimport ModalDialog, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Button from '@atlaskit/button';\nimport styled from 'styled-components';\nimport { getCaptureDetails } from '../fileparser';\nimport { BASE_MEDIA_PATH, VIDEOS_PATH } from '../constants';\nimport { clearHash } from '../utils';\n\nconst CloseButton = styled.div`\n  display: block;\n  width: 100%;\n  margin-top: 20px;\n  text-align: center;\n  color: blue;\n`;\n\nconst CaptureLabelContainer = styled.div`\n  @media screen and (max-width: 600px) {\n    padding-left: 4px;\n  }\n`;\n\nconst CaptureHeader = styled.h4`\n  margin-bottom: 2px;\n`;\n\nconst Details = styled.div`\n  margin: 5px 0 5px 0;\n`;\n\nconst DetailsSpan = styled.span`\n  padding-right: 5px;\n  margin-right: 5px;\n  border-right: 2px solid #ccc;\n\n  & :last-child {\n    border: 0;\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: 10px;\n  @media screen and (max-width: 600px) {\n    padding: 0;\n  }\n`;\n\nconst CopyrightText = styled.span`\n  color: #888;\n  font-size: 10px;\n  display: inline-block;\n  width: 100%;\n  text-align: right;\n  @media screen and (max-width: 600px) {\n    padding-right: 4px;\n  }\n`;\n\nconst getCaptureFromHash = () => {\n  const match = window.location.hash.match(/capture=([^&]*)/);\n  return match && match.pop();\n};\n\nconst showHideViewer = (setCaptureDetails, shipInfo) => {\n  const capture = getCaptureFromHash();\n  if (capture) {\n    return setCaptureDetails(getCaptureDetails(capture, shipInfo));\n  }\n  return setCaptureDetails(null);\n};\n\nexport const CaptureViewer = ({ shipInfo }) => {\n  const [captureDetails, setCaptureDetails] = useState(null);\n\n  // Logic to show/hide self\n  useLayoutEffect(() => {\n    const callback = () => showHideViewer(setCaptureDetails, shipInfo);\n    // If user types in new day scroll to it immediately\n    window.addEventListener('hashchange', callback);\n\n    return () => {\n      window.removeEventListener('hashchange', callback);\n    };\n  });\n\n  useLayoutEffect(() => {\n    showHideViewer(setCaptureDetails, shipInfo);\n  }, [shipInfo]);\n\n  return (\n    <>\n      <ModalTransition>\n        {captureDetails && (\n          <ModalDialog\n            width={'large'}\n            onClose={() => clearHash('capture')}\n            components={{\n              Body: React.forwardRef((props, ref) => (\n                <ModalBody ref={ref}>{props.children}</ModalBody>\n              )),\n            }}\n          >\n            <CaptureLabelContainer>\n              <CaptureHeader>{captureDetails.name || 'unknown'}</CaptureHeader>\n            </CaptureLabelContainer>\n            <video width=\"100%\" controls>\n              <source\n                src={`${BASE_MEDIA_PATH}${VIDEOS_PATH}${captureDetails.capture}.mp4`}\n                type=\"video/webm\"\n              />\n            </video>\n            <CaptureLabelContainer>\n              {captureDetails.timeLabel}\n              <Details>\n                <DetailsSpan>Type: {captureDetails.description || 'Unknown class'}</DetailsSpan>\n                <DetailsSpan>MMSI: {captureDetails.mmsi || 'Unknown'}</DetailsSpan>\n                <DetailsSpan>Size: {captureDetails.size || 'Unknown'}</DetailsSpan>\n              </Details>\n            </CaptureLabelContainer>\n\n            <CloseButton>\n              <Button onClick={() => clearHash('capture')}>Close</Button>\n            </CloseButton>\n\n            <CopyrightText>&copy; 2020 Varun Naik</CopyrightText>\n\n            <br />\n          </ModalDialog>\n        )}\n      </ModalTransition>\n    </>\n  );\n};\n","import { CaptureViewer } from './CaptureViewer';\nexport default CaptureViewer;\n","import React from 'react';\nimport ModalDialog, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Button from '@atlaskit/button';\nimport styled from 'styled-components';\n\nconst CloseButton = styled.div`\n  display: inline-block;\n  width: 100%;\n  margin-top: 5px;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst ModalBody = styled.div`\n  padding: 10px;\n  padding-top: 0;\n`;\n\nexport const AboutDialog = ({ onClose }) => {\n  return (\n    <>\n      <ModalTransition>\n        <ModalDialog\n          width={'large'}\n          onClose={onClose}\n          components={{\n            Body: React.forwardRef((props, ref) => (\n              <ModalBody ref={ref} onClick={onClose}>\n                {props.children}\n              </ModalBody>\n            )),\n          }}\n        >\n          <h2>Sydney Ships Viewer </h2>\n          <p>\n            This uses a Raspberry Pi with a Pi Camera and an RTL-SDR receiver to capture videos of\n            ships transiting the Sydney Harbour.\n          </p>\n          <p>\n            It determines the ship's location based on its AIS broadcasts and triggers a timelapse\n            capture of the ship if it is in view of the camera.\n          </p>\n          <p>\n            Project in detail:\n            <a href=\"https://blog.vnaik.com/posts/photographing-ships.html\">\n              Photographing ships with SDR\n            </a>\n          </p>\n          <p>\n            Project on Github: <a href=\"https://github.com/varunnaik/shippix\">Sydney Ships</a>\n          </p>\n          <ul>\n            <li>\n              This photographs mostly cruise ships and their refuelling tankers (and sometimes\n              freighters) because they are the only ships large enough to show up well on the Pi\n              camera.\n            </li>\n            <li>\n              While the setup captures most ships, it sometimes misses ships either because the\n              ships have their AIS transponders switched off, or because the capture setup was down.\n            </li>\n          </ul>\n          <p>\n            <small>&copy; 2020 Varun Naik</small>\n          </p>\n          <CloseButton>\n            <Button onClick={onClose}>Close</Button>\n          </CloseButton>\n          <br />\n        </ModalDialog>\n      </ModalTransition>\n    </>\n  );\n};\n","import { AboutDialog } from './AboutDialog';\nexport default AboutDialog;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport Button from '@atlaskit/button';\nimport CalendarIcon from '@atlaskit/icon/glyph/calendar';\nimport Select from '@atlaskit/select';\nimport { setLocationHash, getLocationHash, clearHash } from '../utils';\nimport { HEADER_HEIGHT } from '../constants';\nimport AboutDialog from '../AboutDialog';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst HeaderContainer = styled.div`\n  background: #fff;\n  box-shadow: 0 0 0 1px rgba(16, 22, 26, 0.1), 0 0 0 rgba(16, 22, 26, 0),\n    0 1px 1px rgba(16, 22, 26, 0.2);\n  width: 100%;\n  padding: 0 8px;\n  height: ${HEADER_HEIGHT}px;\n  margin-bottom: 1px;\n  display: flex;\n  align-items: center;\n  position: fixed;\n  z-index: 490; /* Keep it below the Atlassian Modal dialog */\n`;\nconst Heading = styled.h1`\n  font-weight: 400;\n  font-size: 16px;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n\n  @media screen and (max-width: 600px) {\n    max-width: 100px;\n  }\n`;\n\nconst DatePickerButtonBox = styled.div`\n  margin: 0;\n  padding: 0;\n  margin-left: 10px;\n\n  padding-left: 10px;\n  height: 20px;\n  margin-right: 5px;\n\n  @media screen and (max-width: 600px) {\n    margin: 0 5px 0 5px;\n    padding-left: 0px;\n    max-width: 100px;\n\n    button {\n      padding-left: 0 !important;\n    }\n  }\n`;\n\nconst DatePickerControl = styled(Button)`\n  margin-top: -6px;\n`;\n\nconst DatePickerPrompt = styled.span`\n  @media screen and (max-width: 600px) {\n    display: none;\n  }\n`;\n\nconst ShipSelect = styled(Select)`\n  text-transform: capitalize;\n  min-width: 190px;\n  margin: 0 5px 0 0;\n\n  @media screen and (max-width: 600px) {\n    min-width: 120px;\n  }\n\n  // Hacks around react-select not allowing its height to be set\n  .react-select__placeholder {\n    color: rgb(66, 82, 110) !important;\n    top: 47%;\n  }\n\n  .react-select__indicators,\n  .react-select__indicator {\n    padding-right: 0; // Allow about button to fit in header on mobile\n    padding-left: 0;\n  }\n\n  .react-select__value-container {\n    padding-right: 0;\n  }\n\n  .react-select__dropdown-indicator {\n    padding-top: 4px !important;\n  }\n  .react-select__control {\n    max-height: 36px;\n    min-height: 36px;\n  }\n  * > * {\n    text-transform: capitalize;\n    max-height: 36px;\n  }\n`;\n\nconst AboutButton = styled(Button)``;\n\nexport const Header = ({ dates, highlights, shipInfo, onShipSelect }) => {\n  const currentDate = getLocationHash('day');\n  const [selectedDate, setSelectedDate] = useState(\n    currentDate ? new Date(currentDate) : new Date()\n  );\n\n  const [selectValue, setSelectValue] = useState();\n  const [selectEntries, setSelectEntries] = useState();\n  const [aboutDialogVisible, setAboutDialogVisible] = useState(false);\n\n  useEffect(() => {\n    const selectEntries = Object.entries(shipInfo)\n      .map(([mmsi, { name }]) => ({\n        label: name.toLowerCase(),\n        value: mmsi,\n      }))\n      .filter(entry => entry.label !== '')\n      .sort((a, b) => a.label > b.label);\n\n    selectEntries.splice(0, 0, { label: 'All', value: '' });\n    setSelectEntries(selectEntries);\n\n    const currentFilterCode = getLocationHash('filter');\n    if (currentFilterCode) {\n      const selectValue = selectEntries.find(e => e.value === currentFilterCode);\n      if (selectValue) {\n        onShipSelect(selectValue);\n      }\n      setSelectValue(selectValue);\n    }\n  }, [shipInfo, onShipSelect]);\n\n  return (\n    <>\n      <HeaderContainer>\n        <Heading>Sydney Ships</Heading>\n        <DatePicker\n          includeDates={dates.map(d => new Date(d))}\n          customInput={\n            <DatePickerButtonBox>\n              <DatePickerControl iconAfter={<CalendarIcon />}>\n                <DatePickerPrompt>Go To Date</DatePickerPrompt>\n              </DatePickerControl>\n            </DatePickerButtonBox>\n          }\n          onChange={date => {\n            const dateObj = moment(date);\n            setLocationHash('day', dateObj.format('YYYY-MM-DD'));\n            setSelectedDate(dateObj.toDate());\n          }}\n          selected={selectedDate}\n        />\n        <ShipSelect\n          className=\"single-select\"\n          classNamePrefix=\"react-select\"\n          placeholder=\"View Ship\"\n          options={selectEntries}\n          onChange={selectedItem => {\n            selectedItem.value\n              ? setLocationHash('filter', selectedItem.value)\n              : clearHash('filter');\n            setSelectValue(selectedItem);\n            onShipSelect(selectedItem);\n          }}\n          value={selectValue}\n        />\n        <AboutButton onClick={() => setAboutDialogVisible(true)}>About</AboutButton>\n        {aboutDialogVisible && (\n          <AboutDialog onClose={() => setAboutDialogVisible(false)}></AboutDialog>\n        )}\n      </HeaderContainer>\n    </>\n  );\n};\n","import { Header } from './Header';\nexport default Header;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { getCapturesByDate, getCapturesByShipAndDate } from './fileparser';\nimport CaptureContainer from './CaptureContainer';\nimport CaptureViewer from './CaptureViewer';\nimport Header from './Header';\nimport { BASE_MEDIA_PATH, MANIFEST_FILE } from './constants';\nimport { clearHash } from './utils';\n\nconst AppContainer = styled.section`\n  @import url('https://use.typekit.net/hkh4msx.css');\n  font-family: fira-sans, sans-serif;\n`;\n\nconst Loader = styled.div`\n  position: fixed;\n  z-index: -2;\n  height: 50px;\n  width: 100%;\n  font-size: 16px;\n  margin: 50px 0 0 10px;\n  ::before {\n    content: 'Loading...';\n  }\n`;\n\nfunction App() {\n  const [captureRows, setCaptureRows] = useState({});\n  const [shipData, setShipData] = useState({ info: {}, highlights: {}, captures: {} });\n\n  const onShipSelect = useCallback(\n    ({ value: mmsi }) => {\n      clearHash('day');\n      const captures = getCapturesByShipAndDate(mmsi, shipData.captures);\n      setCaptureRows(captures);\n    },\n    [setCaptureRows, shipData]\n  );\n\n  useEffect(() => {\n    const fetchCaptures = async () => {\n      const data = await fetch(`${BASE_MEDIA_PATH}${MANIFEST_FILE}`).then(response =>\n        response.json()\n      );\n\n      setShipData(data);\n      setCaptureRows(getCapturesByDate(data));\n    };\n\n    fetchCaptures();\n  }, []);\n\n  return (\n    <AppContainer>\n      <Header\n        dates={Object.keys(captureRows)}\n        highlights={shipData.highlights}\n        shipInfo={shipData.info}\n        onShipSelect={onShipSelect}\n      />\n      <Loader />\n      <CaptureViewer shipInfo={shipData.info}></CaptureViewer>\n      <CaptureContainer rows={captureRows} shipInfo={shipData.info} />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}